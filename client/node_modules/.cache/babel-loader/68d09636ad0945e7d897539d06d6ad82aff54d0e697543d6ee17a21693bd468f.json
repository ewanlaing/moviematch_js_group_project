{"ast":null,"code":"var _jsxFileName = \"/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/directorList.js\";\nimport MovieByDirector from \"./movieByDirector\";\nimport DirectorForm from \"../components/directorForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DirectorList = ({\n  movies,\n  searchByDirector\n}) => {\n  const listItems = movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(MovieByDirector, {\n      movie: movie\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DirectorForm, {\n      searchByDirector: searchByDirector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I am a list of movies by this Director\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), listItems]\n  }, void 0, true);\n};\n_c = DirectorList;\nexport default DirectorList;\nvar _c;\n$RefreshReg$(_c, \"DirectorList\");","map":{"version":3,"names":["MovieByDirector","DirectorForm","jsxDEV","_jsxDEV","Fragment","_Fragment","DirectorList","movies","searchByDirector","listItems","map","movie","imdbID","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/directorList.js"],"sourcesContent":["import MovieByDirector from \"./movieByDirector\";\nimport DirectorForm from \"../components/directorForm\";\n\n\nconst DirectorList = ({movies, searchByDirector}) => {\n\n    const listItems = movies.map((movie) => {\n      return(\n        <MovieByDirector movie={movie} key={movie.imdbID}/>\n      )\n    })\n\n  return(\n    <>\n    <DirectorForm searchByDirector={searchByDirector}/>\n    <div>\n    <h2>I am a list of movies by this Director</h2>\n    </div>\n    {listItems}\n    </>\n  )\n}\n\nexport default DirectorList;"],"mappings":";AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtD,MAAMC,YAAY,GAAGA,CAAC;EAACC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAEjD,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAG,CAAEC,KAAK,IAAK;IACtC,oBACER,OAAA,CAACH,eAAe;MAACW,KAAK,EAAEA;IAAM,GAAMA,KAAK,CAACC,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAEvD,CAAC,CAAC;EAEJ,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA,CAACF,YAAY;MAACO,gBAAgB,EAAEA;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnDb,OAAA;MAAAc,QAAA,eACAd,OAAA;QAAAc,QAAA,EAAI;MAAsC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACLP,SAAS;EAAA,eACR,CAAC;AAEP,CAAC;AAAAS,EAAA,GAjBKZ,YAAY;AAmBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}