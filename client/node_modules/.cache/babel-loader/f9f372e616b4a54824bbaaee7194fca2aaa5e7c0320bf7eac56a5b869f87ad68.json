{"ast":null,"code":"var _jsxFileName = \"/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/movieDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetail = ({\n  movies\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const selectedMovie = movies.find(movie => {\n    return movie.imdbID === id;\n  });\n  const link = `https://www.imdb.com/title/${selectedMovie.imdbID}`;\n  if (!selectedMovie) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedMovie.Poster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedMovie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedMovie.Director\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedMovie.Year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: selectedMovie.Actors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedMovie.Plot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: selectedMovie.Ratings[1].Value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      children: \"IMDB link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MovieDetail, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetail","movies","_s","id","selectedMovie","find","movie","imdbID","link","children","src","Poster","fileName","_jsxFileName","lineNumber","columnNumber","Title","Director","Year","Actors","Plot","Ratings","Value","href","_c","$RefreshReg$"],"sources":["/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/movieDetail.js"],"sourcesContent":["import React from 'react';\nimport {useParams} from 'react-router-dom';\n\nconst MovieDetail = ({movies}) => {\n\n    const {id} = useParams();\n    const selectedMovie = movies.find((movie) => {\n      return movie.imdbID === id\n    })\n\n    const link = `https://www.imdb.com/title/${selectedMovie.imdbID}`;\n\n    if(!selectedMovie){\n        return null;\n    }\n\n  return(\n    <>\n        <img src={selectedMovie.Poster}/>\n        <h2>{selectedMovie.Title}</h2>\n        <h3>{selectedMovie.Director}</h3>\n        <h3>{selectedMovie.Year}</h3>\n        <h4>{selectedMovie.Actors}</h4>\n        <p>{selectedMovie.Plot}</p>\n        <h5>{selectedMovie.Ratings[1].Value}</h5>\n        <a href={link}>IMDB link</a>\n    </>\n  )\n}\n\nexport default MovieDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE9B,MAAM;IAACC;EAAE,CAAC,GAAGR,SAAS,CAAC,CAAC;EACxB,MAAMS,aAAa,GAAGH,MAAM,CAACI,IAAI,CAAEC,KAAK,IAAK;IAC3C,OAAOA,KAAK,CAACC,MAAM,KAAKJ,EAAE;EAC5B,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAI,8BAA6BJ,aAAa,CAACG,MAAO,EAAC;EAEjE,IAAG,CAACH,aAAa,EAAC;IACd,OAAO,IAAI;EACf;EAEF,oBACEP,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA;MAAKa,GAAG,EAAEN,aAAa,CAACO;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjClB,OAAA;MAAAY,QAAA,EAAKL,aAAa,CAACY;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BlB,OAAA;MAAAY,QAAA,EAAKL,aAAa,CAACa;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjClB,OAAA;MAAAY,QAAA,EAAKL,aAAa,CAACc;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BlB,OAAA;MAAAY,QAAA,EAAKL,aAAa,CAACe;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BlB,OAAA;MAAAY,QAAA,EAAIL,aAAa,CAACgB;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAY,QAAA,EAAKL,aAAa,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzClB,OAAA;MAAG0B,IAAI,EAAEf,IAAK;MAAAC,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC9B,CAAC;AAEP,CAAC;AAAAb,EAAA,CAzBKF,WAAW;EAAA,QAEAL,SAAS;AAAA;AAAA6B,EAAA,GAFpBxB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}