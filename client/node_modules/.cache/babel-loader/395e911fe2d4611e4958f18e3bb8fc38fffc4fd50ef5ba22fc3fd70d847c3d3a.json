{"ast":null,"code":"var _jsxFileName = \"/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/movieDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetail = ({\n  movies\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const selectedMovie = movies.find(movie => {\n    return movie.imdbID === id;\n  });\n  const link = `https://www.imdb.com/title/${selectedMovie.imdbID}`;\n  if (!selectedMovie) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"poster\",\n          src: selectedMovie.Poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), \"  \", selectedMovie.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Released: \", selectedMovie.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Starring:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 14\n          }, this), \" \", selectedMovie.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Plot: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }, this), selectedMovie.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Rotten Tomatoes Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }, this), \" \", selectedMovie.Ratings[1].Value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link,\n          children: \"IMDB link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetail, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetail","movies","_s","id","selectedMovie","find","movie","imdbID","link","children","className","src","Poster","fileName","_jsxFileName","lineNumber","columnNumber","Title","Director","Year","Actors","Plot","Ratings","Value","href","_c","$RefreshReg$"],"sources":["/Users/mickcooke/CodeClan_Work/moviematch_js_group_project/src/components/movieDetail.js"],"sourcesContent":["import React from 'react';\nimport {useParams} from 'react-router-dom';\n\nconst MovieDetail = ({movies}) => {\n\n    const {id} = useParams();\n    const selectedMovie = movies.find((movie) => {\n      return movie.imdbID === id\n    })\n\n    const link = `https://www.imdb.com/title/${selectedMovie.imdbID}`;\n\n    if(!selectedMovie){\n        return null;\n    }\n\n  return(\n    <>\n   \n      <div className='Detail-container'>\n\n        <div className='Detail-box'>\n          <img className='poster' src={selectedMovie.Poster}/>\n        </div>\n        <div className='Detail-box'>\n          <h2>{selectedMovie.Title}</h2>\n          <h3><b>Director:</b>  {selectedMovie.Director}</h3>\n          <h3>Released: {selectedMovie.Year}</h3>\n          <p><b>Starring:</b> {selectedMovie.Actors}</p>\n          <p><b>Plot: </b>{selectedMovie.Plot}</p>\n          <p><b>Rotten Tomatoes Rating:</b> {selectedMovie.Ratings[1].Value}</p>\n          <a href={link}>IMDB link</a>\n        </div>\n      </div>\n      \n    </>\n  )\n}\n\nexport default MovieDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}